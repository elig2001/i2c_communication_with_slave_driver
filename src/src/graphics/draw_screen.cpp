#include "draw_screen.h"
#include "led_indicator.h"
#include "ring_meter.h"
#include "controller.h"

#define SCREEN_HEIGHT 320
#define SCREEN_WIDTH 240

// percentages
#define INFO_PANEL_WIDTH_PERCENTAGE 0.95
#define INFO_PANEL_TOP_PERCENTAGE 0.025
#define INFO_PANEL_BOTTOM_PERCENTAGE 0.7

#define GAS_LEVELS_PANEL_WIDTH_PERCENTAGE INFO_PANEL_WIDTH_PERCENTAGE
#define GAS_LEVELS_PANEL_TOP_PERCENTAGE INFO_PANEL_TOP_PERCENTAGE
#define GAS_LEVELS_PANEL_BOTTOM_PERCENTAGE 0.25

#define CONTROL_PANEL_WIDTH_PERCENTAGE INFO_PANEL_WIDTH_PERCENTAGE
#define CONTROL_PANEL_TOP_PERCENTAGE INFO_PANEL_BOTTOM_PERCENTAGE
#define CONTROL_PANEL_BOTTOM_PERCENTAGE (1 - INFO_PANEL_TOP_PERCENTAGE)

// borders
#define INFO_PANEL_LEFT_BORDER SCREEN_WIDTH *INFO_PANEL_WIDTH_PERCENTAGE
#define INFO_PANEL_RIGHT_BORDER SCREEN_WIDTH * (1 - INFO_PANEL_WIDTH_PERCENTAGE)
#define INFO_PANEL_TOP_BORDER SCREEN_HEIGHT *INFO_PANEL_TOP_PERCENTAGE
#define INFO_PANEL_BOTTOM_BORDER SCREEN_HEIGHT *INFO_PANEL_BOTTOM_PERCENTAGE

#define GAS_LEVELS_PANEL_LEFT_BORDER SCREEN_WIDTH * (1 - GAS_LEVELS_PANEL_WIDTH_PERCENTAGE)
#define GAS_LEVELS_PANEL_RIGHT_BORDER SCREEN_WIDTH *GAS_LEVELS_PANEL_WIDTH_PERCENTAGE
#define GAS_LEVELS_PANEL_TOP_BORDER SCREEN_HEIGHT *GAS_LEVELS_PANEL_TOP_PERCENTAGE
#define GAS_LEVELS_PANEL_BOTTOM_BORDER SCREEN_HEIGHT *GAS_LEVELS_PANEL_BOTTOM_PERCENTAGE

#define CONTROL_PANEL_LEFT_BORDER SCREEN_WIDTH * (1 - CONTROL_PANEL_WIDTH_PERCENTAGE)
#define CONTROL_PANEL_RIGHT_BORDER SCREEN_WIDTH *CONTROL_PANEL_WIDTH_PERCENTAGE
#define CONTROL_PANEL_TOP_BORDER SCREEN_HEIGHT *CONTROL_PANEL_TOP_PERCENTAGE
#define CONTROL_PANEL_BOTTOM_BORDER SCREEN_HEIGHT *CONTROL_PANEL_BOTTOM_PERCENTAGE

extern "C"
{
  void draw_info_panel()
  {
    g_tft.drawLine(INFO_PANEL_LEFT_BORDER, INFO_PANEL_TOP_BORDER, INFO_PANEL_RIGHT_BORDER, INFO_PANEL_TOP_BORDER, TFT_WHITE);
    g_tft.drawLine(INFO_PANEL_RIGHT_BORDER, INFO_PANEL_TOP_BORDER, INFO_PANEL_RIGHT_BORDER, INFO_PANEL_BOTTOM_BORDER, TFT_WHITE);
    g_tft.drawLine(INFO_PANEL_LEFT_BORDER, INFO_PANEL_BOTTOM_BORDER, INFO_PANEL_RIGHT_BORDER, INFO_PANEL_BOTTOM_BORDER, TFT_WHITE);
    g_tft.drawLine(INFO_PANEL_LEFT_BORDER, INFO_PANEL_TOP_BORDER, INFO_PANEL_LEFT_BORDER, INFO_PANEL_BOTTOM_BORDER, TFT_WHITE);
  }

  void draw_main_panel(int value, int vmin, int vmax, float Ofset_L, float Ofset_H, const char *units )
  {
    uint32_t radius =((GAS_LEVELS_PANEL_LEFT_BORDER + GAS_LEVELS_PANEL_RIGHT_BORDER) / 2) * 0.7;
    ring_meter(
        value,
        vmin,
        vmax,
        ((INFO_PANEL_LEFT_BORDER + INFO_PANEL_RIGHT_BORDER) / 2) - radius - (int)(radius * Ofset_H),
        ((GAS_LEVELS_PANEL_BOTTOM_BORDER + GAS_LEVELS_PANEL_TOP_BORDER) / 2) + radius - 10 - (int)(radius * Ofset_L),
        radius ,
        units,
        RED2GREEN); // Draw analogue meter
  }

  void draw_gas_panel()
  {
    g_tft.drawLine(
        GAS_LEVELS_PANEL_LEFT_BORDER,
        GAS_LEVELS_PANEL_BOTTOM_BORDER,
        GAS_LEVELS_PANEL_RIGHT_BORDER,
        GAS_LEVELS_PANEL_BOTTOM_BORDER,
        TFT_WHITE);

    draw_led_indicator(
        (uint32_t)(SCREEN_WIDTH * 0.25),
        (uint32_t)(GAS_LEVELS_PANEL_BOTTOM_BORDER * 0.55),
        "CO2",
        TFT_GREEN,
        "67%",
        2,
        10);

    draw_led_indicator(
        (uint32_t)(SCREEN_WIDTH * 0.75),
        (uint32_t)(GAS_LEVELS_PANEL_BOTTOM_BORDER * 0.55),
        "Oxygen",
        TFT_RED,
        "10%",
        2,
        10);
  }

  void draw_control_panel()
  {
    g_tft.drawLine(CONTROL_PANEL_RIGHT_BORDER, CONTROL_PANEL_TOP_BORDER, CONTROL_PANEL_RIGHT_BORDER, CONTROL_PANEL_BOTTOM_BORDER, TFT_WHITE);
    g_tft.drawLine(CONTROL_PANEL_LEFT_BORDER, CONTROL_PANEL_BOTTOM_BORDER, CONTROL_PANEL_RIGHT_BORDER, CONTROL_PANEL_BOTTOM_BORDER, TFT_WHITE);
    g_tft.drawLine(CONTROL_PANEL_LEFT_BORDER, CONTROL_PANEL_TOP_BORDER, CONTROL_PANEL_LEFT_BORDER, CONTROL_PANEL_BOTTOM_BORDER, TFT_WHITE);
    draw_controller(
        (CONTROL_PANEL_RIGHT_BORDER + CONTROL_PANEL_LEFT_BORDER) / 2,
        (CONTROL_PANEL_TOP_BORDER + CONTROL_PANEL_BOTTOM_BORDER) / 2,
        TFT_SKYBLUE);
  }

  void draw_screen()
  {
    draw_main_panel((int)(25*10), 0, 500, -0.85, 0, "T*10 [C]");
  }
}
